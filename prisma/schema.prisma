generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id                 String   @id @default(cuid())
  email              String   @unique
  nama               String
  password           String
  tingkatan_jabatan  String   @default("T1")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  contexts           RiskContext[]
  identifications    RiskIdentification[]
  analyses           RiskAnalysis[]
  assessments        RiskAssessment[]

  @@map("users")
}

model RiskContext {
  id                String   @id @default(cuid())
  nama_kl           String
  tahun_penilaian   Int
  periode           String
  sumber_data       String?
  dja_yang_menilai  String?
  tujuan_strategis  String
  proses_bisnis     String
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  
  identifications   RiskIdentification[]
  analyses          RiskAnalysis[]
  assessments       RiskAssessment[]

  @@map("risk_contexts")
}

model RiskIdentification {
  id                String             @id @default(cuid())
  sifat_risiko      String             // "uncontrollable" | "controllable"
  kode_risiko       String
  pemilik           String
  kategori_risiko   String             // "kinerja" | "keuangan" | "reputasi"
  uraian_risiko     String
  
  // Sebab
  sumber_sebab      String
  uraian_sebab      String
  
  // Dampak
  pihak_terkena     String
  uraian_dampak     String
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  konteksId         String
  context           RiskContext @relation(fields: [konteksId], references: [id])
  
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  
  analyses          RiskAnalysis[]
  assessments       RiskAssessment[]

  @@map("risk_identifications")
}

model RiskAnalysis {
  id                      String   @id @default(cuid())
  skala_dampak            Int      // 1-5
  skala_kemungkinan       Int      // 1-5
  skala_risiko            Int      // calculated
  
  // Pengendalian
  uraian_pengendalian     String
  hasil_penilaian         String   // "belum memadai" | "memadai"
  
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  identifikasiId          String   @unique
  identification          RiskIdentification @relation(fields: [identifikasiId], references: [id])
  
  konteksId               String
  context                 RiskContext @relation(fields: [konteksId], references: [id])
  
  userId                  String
  user                    User     @relation(fields: [userId], references: [id])
  
  assessments             RiskAssessment[]

  @@map("risk_analyses")
}

model RiskAssessment {
  id                              String   @id @default(cuid())
  
  // Respon Risiko
  respon_risiko                   String   // "mengurangi frekuensi" | "mengurangi dampak" | etc
  
  // Penilaian
  pengendalian_sudah_ada          String
  rencana_tindak_pengendalian     String
  penanggung_jawab                String
  target_penyelesaian             DateTime
  indikator_pengeluaran           String
  
  // Nilai Risiko Diharapkan
  kemungkinan_diharapkan          Int      // 1-5
  dampak_diharapkan               Int      // 1-5
  nilai_diharapkan                Int      // calculated
  
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime @updatedAt
  
  identifikasiId                  String
  identification                  RiskIdentification @relation(fields: [identifikasiId], references: [id])
  
  analisisId                      String
  analysis                        RiskAnalysis @relation(fields: [analisisId], references: [id])
  
  konteksId                       String
  context                         RiskContext @relation(fields: [konteksId], references: [id])
  
  userId                          String
  user                            User     @relation(fields: [userId], references: [id])

  @@map("risk_assessments")
}
